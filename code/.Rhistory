prof_data_sil$PER_WHITE<-ifelse(prof_data_sil$PER_WHITE>0.5,1,2)
prof_data_sil$PER_ECDIS<-ifelse(prof_data_sil$PER_ECDIS>50,1,2)
gp_ecdis_2 = ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_ECDIS))) + geom_point()+ ggtitle("PER_ECDIS")
gp_ecdis_2
prof_data_sil<-prof_data
prof_data_sil$PROF_LEVEL<-ifelse(prof_data_sil$PROF_LEVEL=="Proficient", 1,2)
prof_data_sil$PER_WHITE<-ifelse(prof_data_sil$PER_WHITE>50,1,2)
prof_data_sil$PER_ECDIS<-ifelse(prof_data_sil$PER_ECDIS>50,1,2)
prof_data_sil$PER_ASIAN<-ifelse(prof_data_sil$PER_ASIAN>30,1,2)
plot(silhouette(as.numeric(prof_data_sil$PROF_LEVEL), dis), col=1:2)
plot(silhouette(clust_kmeans_2$cluster, dis), col=1:2)
plot(silhouette(as.numeric(prof_data_sil$PROF_LEVEL), dis), col=1:2)
plot(silhouette(as.numeric(prof_data_sil$PER_WHITE), dis), col=1:2)
plot(silhouette(as.numeric(prof_data_sil$PER_ECDIS), dis), col=1:2)
plot(silhouette(as.numeric(prof_data_sil$PER_ASIAN), dis), col=1:2)
plot(silhouette(as.numeric(prof_data_sil$PER_WHITE), dis), col=1:2)
mds_temp_2 = cbind(mds, as.factor(clust_kmeans_2$cluster))
names(mds_temp_2) = c('V1', 'V2', 'clust')
gp_prof_2 = ggplot(mds_temp_2, aes(x=V2, y=V1, color=prof_data$PROF_LEVEL)) +
geom_point()+ ggtitle("PROF_LEVEL")
gp_white_2 = ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_WHITE))) + geom_point()+ ggtitle("White")
gp_white_2
gp_prof_2
gp_asian_2 = ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_ASIAN))) + geom_point()+ ggtitle("PER_ASIAN")
gp_asian_2
prof_data_sil$PER_ASIAN<-ifelse(prof_data_sil$PER_ASIAN>20,1,2)
gp_asian_2 = ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_ASIAN))) + geom_point()+ ggtitle("PER_ASIAN")
gp_asian_2
prof_data_sil<-prof_data
prof_data_sil$PROF_LEVEL<-ifelse(prof_data_sil$PROF_LEVEL=="Proficient", 1,2)
prof_data_sil$PER_WHITE<-ifelse(prof_data_sil$PER_WHITE>50,1,2)
prof_data_sil$PER_ECDIS<-ifelse(prof_data_sil$PER_ECDIS>50,1,2)
prof_data_sil$PER_ASIAN<-ifelse(prof_data_sil$PER_ASIAN>20,1,2)
gp_asian_2 = ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_ASIAN))) + geom_point()+ ggtitle("PER_ASIAN")
gp_asian_2
gp_ecdis_2
gp_white_2
?kmeans
?dist
?cmdscale
q1 <- ggplot(mds, aes(x=V1, y=V2)) + geom_point(alpha=0.6)
#clean environment
rm(list=ls())
#load libraries
require(ggplot2)
require(reshape2)
require(gridExtra)
require(ggdendro)
library(plyr)
require(cluster)
library(mclust)
library(igraphdata)
library(Matrix)
#read data
prof_data<-read.csv("~/Desktop/summer_projects/Clustering/data/subset.csv", colClasses = "character")
nrow(prof_data)
length(which(prof_data$PROF_LEVEL=="Proficient"))
#clean environment
rm(list=ls())
#load libraries
require(ggplot2)
require(reshape2)
require(gridExtra)
require(ggdendro)
library(plyr)
require(cluster)
library(mclust)
library(igraphdata)
library(Matrix)
#read data
prof_data<-read.csv("~/Desktop/summer_projects/Clustering/data/subset.csv", colClasses = "character")
#make relevant columns numeric
prof_data[,6:30]<-sapply(prof_data[,6:30], as.numeric)
#change relevant columns to charter
prof_data$PROF_LEVEL<-as.factor(prof_data$PROF_LEVEL)
#remove irrelevant columns
prof_data$ENTITY_CD<-NULL
prof_data$ENTITY_NAME <-NULL
prof_data$DISTRICT_NAME<-NULL
prof_data$COUNTY_NAME<-NULL
#scale dataset not response
prof_data_num<-prof_data[,2:26]
prof_data_num_scaled<-scale(prof_data_num)
#distance matrix multidimensional scaling 2 dimensions
dis <- dist(prof_data_num_scaled)
mds <- as.data.frame(cmdscale(dis, k=2))
q1 <- ggplot(mds, aes(x=V1, y=V2)) + geom_point(alpha=0.6)
q1
ggplot(mds, aes(x=V1, y=V2)) + geom_point(alpha=0.6, size=0.5)
ggplot(mds, aes(x=V1, y=V2)) + geom_point(alpha=0.6, size=0.5)
?agnes
ggplot(mds, aes(x=V1, y=V2)) + geom_point(alpha=0.6, size=0.5)
#clean environment
rm(list=ls())
#load libraries
require(ggplot2)
require(reshape2)
require(gridExtra)
require(ggdendro)
library(plyr)
require(cluster)
library(mclust)
library(igraphdata)
library(Matrix)
library(knitr)
#read data
prof_data<-read.csv("~/Desktop/summer_projects/Clustering/data/subset.csv", colClasses = "character")
#make relevant columns numeric
prof_data[,6:30]<-sapply(prof_data[,6:30], as.numeric)
#change relevant columns to charter
prof_data$PROF_LEVEL<-as.factor(prof_data$PROF_LEVEL)
#remove irrelevant columns
prof_data$ENTITY_CD<-NULL
prof_data$ENTITY_NAME <-NULL
prof_data$DISTRICT_NAME<-NULL
prof_data$COUNTY_NAME<-NULL
#scale dataset not response
prof_data_num<-prof_data[,2:26]
prof_data_num_scaled<-scale(prof_data_num)
#distance matrix multidimensional scaling 2 dimensions
dis <- dist(prof_data_num_scaled)
mds <- as.data.frame(cmdscale(dis, k=2))
ggplot(mds, aes(x=V1, y=V2)) + geom_point(alpha=0.6, size=0.5)
#HIERARCHICAL CLUSTERING
#clustering
prof_sing <- agnes(prof_data_num_scaled, diss=FALSE, method='single')
dendo_sing <- ggdendrogram(as.dendrogram(prof_sing), leaf_labels=TRUE, labels=TRUE) + labs(title="Single")
dendo_sing <- ggdendrogram(as.dendrogram(prof_sing), leaf_labels=TRUE, labels=TRUE) + labs(title="Single")
prof_sing$ac
prof_comp <- agnes(prof_data_num_scaled, diss=FALSE, method='complete')
dendo_comp<-ggdendrogram(as.dendrogram(prof_comp), leaf_labels=TRUE, labels=TRUE) + labs(title="Complete ")
dendo_comp<-ggdendrogram(as.dendrogram(prof_comp), leaf_labels=TRUE, labels=TRUE) + labs(title="Complete ")
prof_comp$ac
prof_ward <- agnes(prof_data_num_scaled, diss=FALSE, method='ward')
prof_ward$ac
grid.arrange(dendo_sing, dendo_comp,dendo_ward, ncol=3)
prof_ward <- agnes(prof_data_num_scaled, diss=FALSE, method='ward')
dendo_ward <- ggdendrogram(as.dendrogram(prof_ward), leaf_labels=TRUE, labels=TRUE) + labs(title="Ward ")
prof_ward$ac
#K=2
sil_prof_sing_2 = silhouette(cutree(prof_sing, k=2), dis)
sil_prof_comp_2 = silhouette(cutree(prof_comp, k=2), dis)
sil_prof_ward_2 = silhouette(cutree(prof_ward, k=2), dis)
plot(sil_prof_sing_2, col=1:2, cex.main=0.5, cex.names=0.05, main = "Single")
prof_ward$order
prof_ward$data
cutree(prof_ward, k=2)
prof_level_hclust<-cbind(prof_level,cutree(prof_ward, k=2))
prof_level_hclust<-cbind(prof_data,cutree(prof_ward, k=2))
clust1<-subset(prof_level_hclust$`cutree(prof_ward, k = 2)`==1)
clust1<-subset(prof_level_hclust, `cutree(prof_ward, k = 2)`==1)
clust2<-subset(prof_level_hclust, `cutree(prof_ward, k = 2)`==2)
mean(clust1$PER_WHITE)
mean(clust2$PER_WHITE)
nrow(clust1$PROF_LEVEL=="Proficient")/nrow(clust1)
nrow(clust1)
nrow(clust1$PROF_LEVEL=="Proficient")
clust1$PROF_LEVEL
length(which(clust1$PROF_LEVEL=="Proficient"))/nrow(clust1)
length(which(clust2$PROF_LEVEL=="Proficient"))/nrow(clust2)
mean(clust1$ECDIS)
mean(clust1$PER_ECDIS)
mean(clust2$PER_ECDIS)
mean(clust1$PER_BLACK)
mean(clust2$PER_BLACK)
mean(clust1$PER_ASIAN)
mean(clust2$PER_ASIAN)
ggplot(mds, aes(x=V1, y=V2)) + geom_point(alpha=0.6, size=0.5)
rm(list=ls())
#load libraries
require(ggplot2)
require(reshape2)
require(gridExtra)
require(ggdendro)
library(plyr)
require(cluster)
library(mclust)
library(igraphdata)
library(Matrix)
library(knitr)
#read data
prof_data<-read.csv("~/Desktop/summer_projects/Clustering/data/subset.csv", colClasses = "character")
#make relevant columns numeric
prof_data[,6:30]<-sapply(prof_data[,6:30], as.numeric)
#change relevant columns to charter
prof_data$PROF_LEVEL<-as.factor(prof_data$PROF_LEVEL)
#remove irrelevant columns
prof_data$ENTITY_CD<-NULL
prof_data$ENTITY_NAME <-NULL
prof_data$DISTRICT_NAME<-NULL
prof_data$COUNTY_NAME<-NULL
#scale dataset not response
prof_data_num<-prof_data[,2:26]
prof_data_num_scaled<-scale(prof_data_num)
#distance matrix multidimensional scaling 2 dimensions
dis <- dist(prof_data_num_scaled)
mds <- as.data.frame(cmdscale(dis, k=2))
ggplot(mds, aes(x=V1, y=V2)) + geom_point(alpha=0.6, size=0.5)
#HIERARCHICAL CLUSTERING
#clustering
prof_sing <- agnes(prof_data_num_scaled, diss=FALSE, method='single')
prof_comp <- agnes(prof_data_num_scaled, diss=FALSE, method='complete')
prof_ward <- agnes(prof_data_num_scaled, diss=FALSE, method='ward')
prof_level_hclust<-cbind(prof_data,cutree(prof_ward, k=2))
clust1<-subset(prof_level_hclust, `cutree(prof_ward, k = 2)`==1)
clust2<-subset(prof_level_hclust, `cutree(prof_ward, k = 2)`==2)
c1Pr<-length(which(clust1$PROF_LEVEL=="Proficient"))/nrow(clust1)
c1W<-mean(clust1$PER_WHITE)
c1EC<-mean(clust1$PER_ECDIS)
c1B<-mean(clust1$PER_BLACK)
c1A<-mean(clust1$PER_ASIAN)
c2W<-mean(clust2$PER_WHITE)
c2EC<-mean(clust2$PER_ECDIS)
c2B<-mean(clust2$PER_BLACK)
c2A<-mean(clust2$PER_ASIAN)
c2Pr<-length(which(clust2$PROF_LEVEL=="Proficient"))/nrow(clust2)
C1<-c(c1Pr, c1W, c1EC, c1B, c1A)
C2<-c(c2Pr, c2W, c2EC, c2B, c2A)
cluster_hier<-cbind(C1, C2)
kable(cluster_hier)
Cluster_1<-c(c1Pr, c1W, c1EC, c1B, c1A)
Cluster_2<-c(c2Pr, c2W, c2EC, c2B, c2A)
cluster_hier<-cbind(Cluster_1, Cluster_2)
kable(cluster_hier)
Cluster_1<-c(c1Pr, c1W, c1EC, c1B, c1A)
Cluster_2<-c(c2Pr, c2W, c2EC, c2B, c2A)
Variable_Name<-c("Proficiecy", "PER_WHITE", "PER_ECDIS",
"PER_BLACK", "PER_ASIAN")
cluster_hier<-cbind(Variable_Name,Cluster_1, Cluster_2)
kable(cluster_hier)
cluster_hier<-cbind(Variable_Name, round(Cluster_1,4), round(Cluster_2,4))
kable(cluster_hier, caption = "")
cluster_hier<-cbind(Variable_Name, Cluster_1, Cluster_2)
kable(cluster_hier, caption = "Mean Percentage Values of Certain Variables for Cluster 1 and Cluster 2")
prof_level_hclust<-cbind(prof_data,cutree(prof_ward, k=2))
clust1<-subset(prof_level_hclust, `cutree(prof_ward, k = 2)`==1)
clust2<-subset(prof_level_hclust, `cutree(prof_ward, k = 2)`==2)
c1Pr<-round(length(which(clust1$PROF_LEVEL=="Proficient"))/nrow(clust1),4)
c1W<-round(mean(clust1$PER_WHITE),4)
c1EC<-round(mean(clust1$PER_ECDIS),4)
c1B<-round(mean(clust1$PER_BLACK),4)
c1A<-round(mean(clust1$PER_ASIAN),4)
c2W<-round(mean(clust2$PER_WHITE),4)
c2EC<-round(mean(clust2$PER_ECDIS),4)
c2B<-round(mean(clust2$PER_BLACK),4)
c2A<-round(mean(clust2$PER_ASIAN),4)
c2Pr<-round(length(which(clust2$PROF_LEVEL=="Proficient"))/nrow(clust2),4)
Cluster_1<-c(c1Pr, c1W, c1EC, c1B, c1A)
Cluster_2<-c(c2Pr, c2W, c2EC, c2B, c2A)
Variable_Name<-c("Proficiecy", "PER_WHITE", "PER_ECDIS",
"PER_BLACK", "PER_ASIAN")
cluster_hier<-cbind(Variable_Name, Cluster_1, Cluster_2)
kable(cluster_hier, caption = "Mean Percentage Values of Certain Variables for Cluster 1 and Cluster 2")
prof_level_hclust<-cbind(prof_data,cutree(prof_ward, k=2))
clust1<-subset(prof_level_hclust, `cutree(prof_ward, k = 2)`==1)
clust2<-subset(prof_level_hclust, `cutree(prof_ward, k = 2)`==2)
c1Pr<-round(length(which(clust1$PROF_LEVEL=="Proficient"))/nrow(clust1),4)
c1W<-round(mean(clust1$PER_WHITE),4)
c1EC<-round(mean(clust1$PER_ECDIS),4)
c1B<-round(mean(clust1$PER_BLACK),4)
c1H<-round(mean(clust1$PER_HISP),4)
c1A<-round(mean(clust1$PER_ASIAN),4)
c2W<-round(mean(clust2$PER_WHITE),4)
c2EC<-round(mean(clust2$PER_ECDIS),4)
c2B<-round(mean(clust2$PER_BLACK),4)
c2H<-round(mean(clust2$PER_HISP),4)
c2A<-round(mean(clust2$PER_ASIAN),4)
c2Pr<-round(length(which(clust2$PROF_LEVEL=="Proficient"))/nrow(clust2),4)
Cluster_1<-c(c1Pr, c1EC, c1W, c1B,c1H, c1A)
Cluster_2<-c(c2Pr, c2EC, c2W, c2B,c2H, c2A)
Variable_Name<-c("Proficiecy","PER_ECDIS", "PER_WHITE",
"PER_BLACK", "PER_HISP", "PER_ASIAN")
cluster_hier<-cbind(Variable_Name, Cluster_1, Cluster_2)
kable(cluster_hier, caption = "Mean Percentage Values of Certain Variables for Cluster 1 and Cluster 2")
prof_data_sil<-prof_data
prof_data_sil$PROF_LEVEL<-ifelse(prof_data_sil$PROF_LEVEL=="Proficient", 1,2)
prof_data_sil$PER_WHITE<-ifelse(prof_data_sil$PER_WHITE>50,1,2)
mds_temp_2 = cbind(mds, as.factor(prof_level_hclust))
mds
prof_level_hclust
mds_temp_2 = cbind(mds, prof_level_hclust)
names(mds_temp_2) = c('V1', 'V2', 'clust')
ggplot(mds_temp_2, aes(x=V2, y=V1, color=prof_data$PROF_LEVEL)) +
geom_point()+ ggtitle("PROF_LEVEL")
ggplot(mds_temp_2, aes(x=V2, y=V1, color=prof_data$ECDIS)) +
geom_point()+ ggtitle("PROF_LEVEL")
ggplot(mds_temp_2, aes(x=V2, y=V1, color=prof_data$PER_ECDIS)) +
geom_point()+ ggtitle("PROF_LEVEL")
ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data$PER_ECDIS))) +
geom_point()+ ggtitle("PROF_LEVEL")
prof_data_sil<-prof_data
prof_data_sil$PROF_LEVEL<-ifelse(prof_data_sil$PROF_LEVEL=="Proficient", 1,2)
prof_data_sil$PER_WHITE<-ifelse(prof_data_sil$PER_WHITE>50,1,2)
prof_data_sil$PER_ECDIS<-ifelse(prof_data_sil$PER_ECDIS>50,1,2)
ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_ECDIS))) +
geom_point()+ ggtitle("PROF_LEVEL")
ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_ECDIS))) +
geom_point()+ ggtitle("PROF_LEVEL") +
coord_flip()
prof_data_sil$PER_BLACK<-ifelse(prof_data_sil$PER_BLACK>50,1,2)
ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_BLACK))) + geom_point()+ ggtitle("PER_BLACK")+
coord_flip()
prof_data_sil$PER_HISP<-ifelse(prof_data_sil$PER_HISP>50,1,2)
ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_HISP))) + geom_point()+ ggtitle("PER_HISP")+
coord_flip()
ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$CHARTER))) + geom_point()+ ggtitle("CHARTER")+
coord_flip()
ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PROF_LEVEL))) +
geom_point()+ ggtitle("PROF_LEVEL") +
coord_flip()
ggplot(mds_temp_2, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PER_ECDIS))) + geom_point()+ ggtitle("PER_ECDIS")+
coord_flip()
hist(clust1$PER_WHITE, by=`cutree(prof_ward, k = 2))
)
)
ggplot(prof_level_hclust, aes(x=PER_WHITE, color=`cutree(prof_ward, k = 2)`)) +
geom_histogram()
ggplot(prof_level_hclust, aes(x=PER_WHITE, color=`cutree(prof_ward, k = 2)`)) +
geom_histogram(fill="white")
ggplot(prof_level_hclust, aes(x=PER_WHITE, color=as.factor(`cutree(prof_ward, k = 2)`))) +
geom_histogram(fill="white")
names(prof_level_hclust)[which(names(prof_level_hclust)==`cutree(prof_ward, k = 2)`)]
names(prof_level_hclust)==`cutree(prof_ward, k = 2)`
names(prof_level_hclust)[which(names(prof_level_hclust)=="`cutree(prof_ward, k = 2)`")]<-"cluster"
ggplot(prof_level_hclust, aes(x=PER_WHITE, color=as.factor(cluster))) +
geom_histogram(fill="white")
ggplot(prof_level_hclust, aes(x=PER_WHITE, color=as.factor(prof_level_hclust$cluster))) +
geom_histogram(fill="white")
ggplot(prof_level_hclust, aes(x=PER_WHITE, color=as.factor("cluster"))) +
geom_histogram(fill="white")
mds_temp_2
mds
ggplot(mds, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PROF_LEVEL))) +
geom_point()+ ggtitle("PROF_LEVEL") +
coord_flip() +geom_point(size=0.5)
prof_data_sil$PROF_LEVEL
#K-MEANS
set.seed(23462)
clust_kmeans_2 <- kmeans(prof_data_num_scaled, 2, nstart = 10, iter.max=100)
clust_kmeans_3 <- kmeans(prof_data_num_scaled, 3, nstart = 10, iter.max=100)
clust_kmeans_4 <- kmeans(prof_data_num_scaled, 4, nstart = 10, iter.max=100)
plot(silhouette(clust_kmeans_2$cluster, dis), col=1:2)
plot(silhouette(clust_kmeans_3$cluster, dis), col=1:3)
plot(silhouette(clust_kmeans_2$cluster, dis), col=1:2)
plot(silhouette(clust_kmeans_3$cluster, dis), col=1:3)
plot(silhouette(clust_kmeans_2$cluster, dis), col=1:2)
plot(silhouette(clust_kmeans_3$cluster, dis), col=1:3)
cbind(clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss)
rbind(cbind(clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss), cbind(clust_kmeans_3$tot.withinss, clust_kmeans_3$betweenss))
rbind(cbind(clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss), cbind(clust_kmeans_3$tot.withinss, clust_kmeans_3$betweenss))
k<-c("k=2","k=3")
rbind(cbind(k,cbind(clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss), cbind(clust_kmeans_3$tot.withinss, clust_kmeans_3$betweenss)))
rbind(cbind(c("k=2","k=3"),cbind(clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss), cbind(clust_kmeans_3$tot.withinss, clust_kmeans_3$betweenss)))
k<-rbind("k=2","k=3")
rm(list=ls())
#load libraries
require(ggplot2)
require(reshape2)
require(gridExtra)
require(ggdendro)
library(plyr)
require(cluster)
library(mclust)
library(igraphdata)
library(Matrix)
#set working directory
setwd("~/Desktop/Michigan/503_multivariate/hw5")
#load data
crabs<-read.table("crabs.txt", header = TRUE)
#use the last 5 columns
crabs <-crabs[,3:7]
#normalize data
crabs_norm <- scale(crabs)
#distance matrix
dis = dist(crabs_norm)
mds = as.data.frame(cmdscale(dis, k=2))
#Maybe two clusters
q1 = ggplot(mds, aes(x=V1, y=V2)) + geom_point(alpha=0.6)
q2 = ggplot(crabs, aes(x=CL, y=CW)) + geom_point(alpha=0.6)
q3 = ggplot(crabs, aes(x=BD, y=CW)) + geom_point(alpha=0.6)
q4 = ggplot(crabs, aes(x=RW, y=BD)) + geom_point(alpha=0.6)
#grid.arrange(q1, q2, q3, q4, ncol=2)
q1
rbind(cbind("k=2",clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss),cbind("k=3",clust_kmeans_3$tot.withinss, clust_kmeans_3$betweenss))
clust_kmeans_2
rbind(cbind("k=2",clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss), cbind("k=3",clust_kmeans_3$tot.withinss, clust_kmeans_3$betweenss))
#K-MEANS
set.seed(23462)
clust_kmeans_2 <- kmeans(prof_data_num_scaled, 2, nstart = 10, iter.max=100)
#clean environment
rm(list=ls())
#load libraries
require(ggplot2)
require(reshape2)
require(gridExtra)
require(ggdendro)
library(plyr)
require(cluster)
library(mclust)
library(igraphdata)
library(Matrix)
library(knitr)
#read data
prof_data<-read.csv("~/Desktop/summer_projects/Clustering/data/subset.csv", colClasses = "character")
#make relevant columns numeric
prof_data[,6:30]<-sapply(prof_data[,6:30], as.numeric)
#change relevant columns to charter
prof_data$PROF_LEVEL<-as.factor(prof_data$PROF_LEVEL)
#remove irrelevant columns
prof_data$ENTITY_CD<-NULL
prof_data$ENTITY_NAME <-NULL
prof_data$DISTRICT_NAME<-NULL
prof_data$COUNTY_NAME<-NULL
#scale dataset not response
prof_data_num<-prof_data[,2:26]
prof_data_num_scaled<-scale(prof_data_num)
#distance matrix multidimensional scaling 2 dimensions
dis <- dist(prof_data_num_scaled)
mds <- as.data.frame(cmdscale(dis, k=2))
#K-MEANS
set.seed(23462)
clust_kmeans_2 <- kmeans(prof_data_num_scaled, 2, nstart = 10, iter.max=100)
clust_kmeans_2 <- kmeans(prof_data_num_scaled, 2, nstart = 10, iter.max=100)
clust_kmeans_3 <- kmeans(prof_data_num_scaled, 3, nstart = 10, iter.max=100)
plot(silhouette(clust_kmeans_2$cluster, dis), col=1:2)
plot(silhouette(clust_kmeans_3$cluster, dis), col=1:3)
rbind(cbind("k=2",clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss), cbind("k=3",clust_kmeans_3$tot.withinss, clust_kmeans_3$betweenss))
qual<-rbind(cbind("k=2",clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss), cbind("k=3",clust_kmeans_3$tot.withinss, clust_kmeans_3$betweenss))
class(qual)
qual<-as.data.frame(rbind(cbind("k=2",clust_kmeans_2$tot.withinss, clust_kmeans_2$betweenss), cbind("k=3",clust_kmeans_3$tot.withinss, clust_kmeans_3$betweenss)))
qual
names(qual)<-c("Clustrs", "Total Within-Cluster SS",  "Total Between-Cluster SS")
kable(qual)
qual<-as.data.frame(rbind(cbind("k=2", round(clust_kmeans_2$tot.withinss,4), round(clust_kmeans_2$betweenss,4)), cbind("k=3", round(clust_kmeans_3$tot.withinss,4), round(clust_kmeans_3$betweenss,4))))
names(qual)<-c("Clustrs", "Total Within-Cluster SS",  "Total Between-Cluster SS")
kable(qual, caption = "Total Within and Between Sum of Squares for K=2 and K=3")
round(clust_kmeans_2$tot.withinss,3)
clust_kmeans_2$cluster
prof_level_kmeans<-cbind(prof_data,clust_kmeans_2$cluster)
names(prof_level_kmeans)
clust1<-subset(prof_level_kmeans, "clust_kmeans_2$cluster"==1)
clust2<-subset(prof_level_kmeans, "clust_kmeans_2$cluster"==2)
c1Pr<-round(length(which(clust1$PROF_LEVEL=="Proficient"))/nrow(clust1),4)
c1W<-round(mean(clust1$PER_WHITE),4)
c1EC<-round(mean(clust1$PER_ECDIS),4)
c1B<-round(mean(clust1$PER_BLACK),4)
c1H<-round(mean(clust1$PER_HISP),4)
c1A<-round(mean(clust1$PER_ASIAN),4)
c2W<-round(mean(clust2$PER_WHITE),4)
c2EC<-round(mean(clust2$PER_ECDIS),4)
c2B<-round(mean(clust2$PER_BLACK),4)
c2H<-round(mean(clust2$PER_HISP),4)
c2A<-round(mean(clust2$PER_ASIAN),4)
c2Pr<-round(length(which(clust2$PROF_LEVEL=="Proficient"))/nrow(clust2),4)
Cluster_1<-c(c1Pr, c1EC, c1W, c1B,c1H, c1A)
Cluster_2<-c(c2Pr, c2EC, c2W, c2B,c2H, c2A)
Variable_Name<-c("Proficiecy","PER_ECDIS", "PER_WHITE",
"PER_BLACK", "PER_HISP", "PER_ASIAN")
kable(cluster_kmeans, caption = "Mean Percentage Values of Certain Variables for Cluster 1 and Cluster 2 K-Means")
cluster_kmeans<-cbind(Variable_Name, Cluster_1, Cluster_2)
kable(cluster_kmeans, caption = "Mean Percentage Values of Certain Variables for Cluster 1 and Cluster 2 K-Means")
clust1
prof_level_kmeans<-cbind(prof_data,clust_kmeans_2$cluster)
names(prof_level_kmeans)[which(names(prof_level_kmeans)=="clust_kmeans_2$cluster")]<-"cluster"
clust1<-subset(prof_level_kmeans, "cluster"==1)
clust1
prof_data
names(prof_level_kmeans)[which(names(prof_level_kmeans)=="clust_kmeans_2$cluster")]
prof_level_kmeans<-cbind(prof_data, clust_kmeans_2$cluster)
names(prof_level_kmeans)
names(prof_level_kmeans)[which(names(prof_level_kmeans)=="clust_kmeans_2$cluster")]
names(prof_level_kmeans)[which(names(prof_level_kmeans)=="clust_kmeans_2$cluster")]
names(prof_level_kmeans)[which(names(prof_level_kmeans)=="clust_kmeans_2$cluster")]<-"cluster"
clust1<-subset(prof_level_kmeans, "cluster"==1)
clust1
prof_level_kmeans
clust1<-subset(prof_level_kmeans, cluster==1)
clust1
clust2<-subset(prof_level_kmeans, cluster==2)
c1Pr<-round(length(which(clust1$PROF_LEVEL=="Proficient"))/nrow(clust1),4)
c1W<-round(mean(clust1$PER_WHITE),4)
c1EC<-round(mean(clust1$PER_ECDIS),4)
c1B<-round(mean(clust1$PER_BLACK),4)
c1H<-round(mean(clust1$PER_HISP),4)
c1A<-round(mean(clust1$PER_ASIAN),4)
c2W<-round(mean(clust2$PER_WHITE),4)
c2EC<-round(mean(clust2$PER_ECDIS),4)
c2B<-round(mean(clust2$PER_BLACK),4)
c2H<-round(mean(clust2$PER_HISP),4)
c2A<-round(mean(clust2$PER_ASIAN),4)
c2Pr<-round(length(which(clust2$PROF_LEVEL=="Proficient"))/nrow(clust2),4)
Cluster_1<-c(c1Pr, c1EC, c1W, c1B,c1H, c1A)
Cluster_2<-c(c2Pr, c2EC, c2W, c2B,c2H, c2A)
Variable_Name<-c("Proficiecy","PER_ECDIS", "PER_WHITE",
"PER_BLACK", "PER_HISP", "PER_ASIAN")
cluster_kmeans<-cbind(Variable_Name, Cluster_1, Cluster_2)
kable(cluster_kmeans, caption = "Mean Percentage Values of Certain Variables for Cluster 1 and Cluster 2 K-Means")
cluster_hier
ggplot(mds, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PROF_LEVEL))) +
geom_point()+ ggtitle("PROF_LEVEL") +
coord_flip() +geom_point(size=0.3)+
guides(fill=guide_legend(title="Proficiency"))
prof_data_sil<-prof_data
prof_data_sil$PROF_LEVEL<-ifelse(prof_data_sil$PROF_LEVEL=="Proficient", 1,2)
prof_data_sil$PER_WHITE<-ifelse(prof_data_sil$PER_WHITE>50,1,2)
prof_data_sil$PER_ECDIS<-ifelse(prof_data_sil$PER_ECDIS>50,1,2)
plot_prof<-ggplot(mds, aes(x=V2, y=V1, color=as.factor(prof_data_sil$PROF_LEVEL))) +
geom_point()+ ggtitle("PROF_LEVEL") +
coord_flip() +geom_point(size=0.3)+
guides(fill=guide_legend(title="Proficiency"))
plot_prof
setwd("~/Desktop/summer_projects/variable_selection/code")
